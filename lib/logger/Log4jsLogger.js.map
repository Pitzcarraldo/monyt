{"version":3,"sources":["../../src/logger/Log4jsLogger.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;IAEqB,Y;;;;+BAGD;AAChB,uBAAO,SAAP,CAAiB,EAAE,mCAAF,EAAjB;AACA;AACD;;;kCAEoB,O,EAAS;AAC5B,UAAM,WAAW,QAAQ,QAAR,IAAoB,KAArC;AACA,UAAM,QAAQ,QAAQ,KAAR,IAAiB,MAA/B;AACA,UAAM,iBAAiB,QAAQ,cAAR,IAA0B,KAAjD;AACA,UAAM,SAAS,aAAa,IAAb,CAAkB,SAAlB,CAA4B,QAA5B,CAAf;AACA,aAAO,QAAP,CAAgB,KAAhB;AACA,wBAAkB,aAAa,IAAb,CAAkB,cAAlB,CAAiC,MAAjC,CAAlB;AACA,aAAO,MAAP;AACD;;;sCAEoD;AAAA,UAAjC,IAAiC,QAAjC,IAAiC;AAAA,UAA3B,MAA2B,QAA3B,MAA2B;AAAA,UAAnB,MAAmB,QAAnB,MAAmB;AAAA,UAAX,QAAW,QAAX,QAAW;;AACnD,mBAAa,IAAb,CAAkB,YAAlB,CAA+B,IAA/B;AACA,mBAAa,IAAb,CAAkB,WAAlB,CAA8B,aAAa,IAAb,CAAkB,SAAlB,CAA4B,IAA5B,EAAkC,MAAlC,EAA0C,MAA1C,CAA9B,EAAiF,QAAjF;AACD;;;sCAEoC;AAAA,wCAAX,SAAW;AAAX,iBAAW;AAAA;;AACnC,mBAAa,IAAb,CAAkB,SAAlB,CAA4B,EAAE,qBAAgB,SAAhB,CAAF,EAA5B;AACD;;;;;;;;;;;;oCASkC;AAAA,UAAd,OAAc,yDAAJ,EAAI;;AACjC,UAAM,SAAS,aAAa,IAAb,CAAkB,SAAlB,CAA4B,QAAQ,QAAR,IAAmB,SAA/C,CAAf;AACA,UAAM,QAAQ,QAAQ,KAAR,IAAiB,MAA/B;AACA,UAAM,SAAS,QAAQ,MAAR,IAAkB,0DAAjC;AACA,aAAO,aAAa,IAAb,CAAkB,aAAlB,CAAgC,MAAhC,EAAwC,EAAE,YAAF,EAAS,cAAT,EAAxC,CAAP;AACD;;;;;;;;;;;;8BASgB,O,EAAS;AACxB,aAAO,IAAI,YAAJ,CAAiB,OAAjB,CAAP;AACD;;;;;;;;;;;;AASD,0BAA0B;AAAA,QAAd,OAAc,yDAAJ,EAAI;AAAA;AAAA,iHAClB,EAAE,QAAQ,aAAa,aAAb,CAA2B,OAA3B,CAAV,EADkB;AAEzB;;;;;AA7DkB,Y,CACZ,I,GAAO,aAAa,QAAb,E;kBADK,Y","file":"Log4jsLogger.js","sourcesContent":["import log4js from 'log4js';\nimport Logger from './Logger';\nimport { DEFAULT_APPENDERS } from './appenders/index';\n\nexport default class Log4jsLogger extends Logger {\n  static CORE = Log4jsLogger.initCore();\n\n  static initCore() {\n    log4js.configure({ appenders: DEFAULT_APPENDERS });\n    return log4js;\n  }\n\n  static getCoreLogger(options) {\n    const category = options.category || 'app';\n    const level = options.level || 'info';\n    const replaceConsole = options.replaceConsole || false;\n    const logger = Log4jsLogger.CORE.getLogger(category);\n    logger.setLevel(level);\n    replaceConsole && Log4jsLogger.CORE.replaceConsole(logger);\n    return logger;\n  }\n\n  static addAppender({type, layout, config, category}) {\n    Log4jsLogger.CORE.loadAppender(type);\n    Log4jsLogger.CORE.addAppender(Log4jsLogger.CORE.appenders[type](layout, config), category);\n  }\n\n  static replaceAppender(...appenders) {\n    Log4jsLogger.CORE.configure({ appenders: [ ...appenders ] });\n  }\n\n  /**\n   * @param {Object} [options={}] - Options to setup logMiddleware().\n   * @param {string} [options.category=request] - Category name of request logger.\n   * @param {string} [options.category=auto] - Level to log.\n   * @param {string} [options.format=:method :url :status :content-length - :response-time ms] - Log format of request logger.\n   * @returns {Function} connect/express middleware to logging requests.\n   */\n  static logMiddleware(options = {}) {\n    const logger = Log4jsLogger.CORE.getLogger(options.category|| 'request');\n    const level = options.level || 'auto';\n    const format = options.format || ':method :url :status :content-length - :response-time ms';\n    return Log4jsLogger.CORE.connectLogger(logger, { level, format });\n  }\n\n  /**\n   * @param {Object} [options={category: 'app', level: 'info', replaceConsole: false}] - Options to initialize logger instance.\n   * @param {string} [options.category=app] - Category of logger.\n   * @param {string} [options.level=info] - Level to log.\n   * @param {boolean} [options.replaceConsole=false] - Flag to switch replaceConsole options.\n   * @returns {Log4jsLogger} - new Log4jsLogger Instance.\n   */\n  static getLogger(options) {\n    return new Log4jsLogger(options);\n  }\n\n  /**\n   * @param {Object} [options={}] - Options to initialize logger instance.\n   * @param {string} [options.category=app] - Category of logger.\n   * @param {string} [options.level=info] - Level to log.\n   * @param {boolean} [options.replaceConsole=false] - Flag to switch replaceConsole options.\n   * @returns {Log4jsLogger} - new Log4jsLogger Instance.\n   */\n  constructor(options = {}) {\n    super({ logger: Log4jsLogger.getCoreLogger(options) });\n  }\n}\n"]}