{"version":3,"sources":["../../src/sender/GraphiteSender.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEqB,c;;;AACnB,4BAA0B;AAAA,QAAd,OAAc,yDAAJ,EAAI;AAAA;;AAAA;;AAExB,UAAK,MAAL,GAAc,mBAAS,YAAT,kBAAqC,QAAQ,IAA7C,SAAqD,QAAQ,IAA7D,OAAd;AAFwB;AAGzB;;;;yBAEI,O,EAAS;AAAA;;AACZ,aAAO,sBAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AACrC,eAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,EAA2B,iBAAS;AAClC,cAAI,KAAJ,EAAW;AACT,mBAAO,OAAO,KAAP,CAAP;AACD;AACD,iBAAO,QAAQ,OAAR,CAAP;AACD,SALD;AAMD,OAPM,CAAP;AAQD;;;;;kBAfkB,c","file":"GraphiteSender.js","sourcesContent":["import Sender from './Sender';\nimport graphite from 'graphite';\n\nexport default class GraphiteSender extends Sender {\n  constructor(options = {}) {\n    super();\n    this.client = graphite.createClient(`plaintext://${options.host}:${options.port}/`);\n  }\n\n  send(metrics) {\n    return new Promise((resolve, reject)=> {\n      this.client.write(metrics, error => {\n        if (error) {\n          return reject(error);\n        }\n        return resolve(metrics);\n      });\n    });\n  }\n}\n"]}