{"version":3,"sources":["../../src/sender/GraphiteSender.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGqB;;;AACnB,WADmB,cACnB,GAA0B;QAAd,gEAAU,kBAAI;wCADP,gBACO;;6FADP,4BACO;;AAExB,UAAK,MAAL,GAAc,mBAAS,YAAT,kBAAqC,QAAQ,IAAR,SAAgB,QAAQ,IAAR,MAArD,CAAd,CAFwB;;GAA1B;;6BADmB;;yBAMd,SAAS;;;AACZ,aAAO,sBAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AACrC,eAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,EAA2B,iBAAS;AAClC,cAAI,KAAJ,EAAW;AACT,mBAAO,OAAO,KAAP,CAAP,CADS;WAAX;AAGA,iBAAO,QAAQ,OAAR,CAAP,CAJkC;SAAT,CAA3B,CADqC;OAApB,CAAnB,CADY;;;SANK","file":"GraphiteSender.js","sourcesContent":["import Sender from './Sender';\nimport graphite from 'graphite';\n\nexport default class GraphiteSender extends Sender {\n  constructor(options = {}) {\n    super();\n    this.client = graphite.createClient(`plaintext://${options.host}:${options.port}/`);\n  }\n\n  send(metrics) {\n    return new Promise((resolve, reject)=> {\n      this.client.write(metrics, error => {\n        if (error) {\n          return reject(error);\n        }\n        return resolve(metrics);\n      });\n    });\n  }\n}\n"]}