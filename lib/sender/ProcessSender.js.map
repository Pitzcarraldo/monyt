{"version":3,"sources":["../../src/sender/ProcessSender.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGqB;;;AACnB,WADmB,aACnB,GAAc;wCADK,eACL;;6FADK,2BACL;;AAEZ,UAAK,WAAL,GAAmB,QAAQ,IAAR,CAFP;AAGZ,QAAI,CAAC,MAAK,WAAL,EAAkB;AACrB,6BAAQ,6FAAR,EADqB;AAErB,YAAK,WAAL,GAAmB,YAAM,EAAN,CAFE;KAAvB;iBAHY;GAAd;;6BADmB;;yBAWd,SAAS;;;AACZ,aAAO,sBAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACtC,YAAI;AACF,iBAAK,WAAL,CAAiB,OAAjB,EADE;AAEF,iBAAO,QAAQ,OAAR,CAAP,CAFE;SAAJ,CAGE,OAAO,KAAP,EAAc;AACd,iBAAO,OAAO,KAAP,CAAP,CADc;SAAd;OAJe,CAAnB,CADY;;;SAXK","file":"ProcessSender.js","sourcesContent":["import Sender from './Sender';\nimport warning from '../warning';\n\nexport default class ProcessSender extends Sender {\n  constructor() {\n    super();\n    this.sendMessage = process.send;\n    if (!this.sendMessage) {\n      warning('Process Sender only can work in clusters mode. This Process Sender will not send metricses.');\n      this.sendMessage = () => {\n      };\n    }\n  }\n\n  send(metrics) {\n    return new Promise((resolve, reject) => {\n      try {\n        this.sendMessage(metrics);\n        return resolve(metrics);\n      } catch (error) {\n        return reject(error);\n      }\n    });\n  }\n}\n"]}