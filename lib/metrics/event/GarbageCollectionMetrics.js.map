{"version":3,"sources":["../../../src/metrics/event/GarbageCollectionMetrics.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAM,gBAAgB;AACpB,SAAO,CADa;AAEpB,SAAO;AAFa,CAAtB;;IAKqB,wB;;;AACnB,sCAAc;AAAA;;AAAA;;AAEZ,UAAK,IAAL,GAAY,IAAZ;AACA,UAAK,KAAL,GAAa,aAAb;AACA,UAAK,MAAL;AAJY;AAKb;;;;6BAEQ;AAAA;;AACP,2BAAS,EAAT,CAAY,IAAZ,EAAkB,gBAAQ;AACxB,eAAK,KAAL,GAAa,OAAK,SAAL,CAAe,IAAf,CAAb;AACD,OAFD;AAGD;;;+BAEU;AACT,UAAM,mCAAa,KAAK,KAAlB,CAAN;AACA,WAAK,KAAL,GAAa,aAAb;AACA,aAAO,KAAP;AACD;;;8BAES,I,EAAM;AACd,aAAO;AACL,eAAO,KAAK,IAAL,KAAc,UAAd,GAA2B,KAAK,QAAhC,GAA2C,CAD7C;AAEL,eAAO,KAAK,IAAL,KAAc,kBAAd,GAAmC,KAAK,QAAxC,GAAmD;AAFrD,OAAP;AAID;;;;;kBAzBkB,wB","file":"GarbageCollectionMetrics.js","sourcesContent":["import profiler from 'gc-profiler';\nimport Metrics from '../Metrics';\n\nconst DEFAULT_VALUE = {\n  minor: 0,\n  major: 0\n};\n\nexport default class GarbageCollectionMetrics extends Metrics {\n  constructor() {\n    super();\n    this.name = 'gc';\n    this.value = DEFAULT_VALUE;\n    this.listen();\n  }\n\n  listen() {\n    profiler.on('gc', info => {\n      this.value = this.toMetrics(info);\n    });\n  }\n\n  getValue() {\n    const value = { ...this.value };\n    this.value = DEFAULT_VALUE;\n    return value;\n  }\n\n  toMetrics(info) {\n    return {\n      minor: info.type === 'Scavenge' ? info.duration : 0,\n      major: info.type === 'MarkSweepCompact' ? info.duration : 0\n    };\n  }\n}\n"]}